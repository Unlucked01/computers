services:
  # Backend API service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: pc_configurator_backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@host.docker.internal:5432/pc_configurator
      DATABASE_HOST: host.docker.internal
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: pc_configurator
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-secret-key-here}
      ENVIRONMENT: production
      CORS_ORIGINS: https://unl-computers.duckdns.org,http://localhost:3000
      PDF_TEMP_PATH: /tmp/pc_configs
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - pdf_temp:/tmp/pc_configs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: pc_configurator_frontend
    environment:
      NEXT_PUBLIC_API_URL: https://unl-computers.duckdns.org/api
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

# Volumes для временных файлов
volumes:
  pdf_temp: 